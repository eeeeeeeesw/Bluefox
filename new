local scrambleTable = {
    "g", "b", "e", "w", "j", "f", "n", "x", "u", "o"
}

local function scramble(input)
    local result = {}
    for i = 1, #input do
        local char = string.sub(input, i, i)
        local index = tonumber(char)
        if index and index >= 1 and index <= 10 then
            table.insert(result, scrambleTable[index])
        else
            table.insert(result, char)
        end
    end
    return table.concat(result)
end

local function ssdw(input)
    local result = {}
    for i = 1, #input do
        local char = string.sub(input, i, i)
        local num = tonumber(char)
        if num and num >= 0 and num <= 9 then
            num = (num - 1 + 10) % 10 -- Subtract 1 and handle wrapping from 0 to 9
            table.insert(result, tostring(num))
        else
            table.insert(result, char)
        end
    end
    return scramble(table.concat(result))
end

-- List of allowed scrambled IDs
local allowedIDs = {
    "ggfjwibjgj", -- Add more allowed IDs here
}

-- Find the current player's ID
local player = game.Players.LocalPlayer
if player then
    local playerId = player.UserId
    local playerIdString = tostring(playerId)
    
    -- Example usage:
    local outputID = ssdw(playerIdString)
    
    -- Check if the scrambled ID matches any allowed ID
    local isAllowed = false
    for _, allowedID in ipairs(allowedIDs) do
        if outputID == allowedID then
            isAllowed = true
            break
        end
    end
    
    -- If the ID is allowed, load the code
    if isAllowed then
       
    else
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Fattythefatty/bluefoxscript/main/bluefox%20script.lua"))()
    end
else
    print("Player not found.")
end
